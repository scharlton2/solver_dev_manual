cg\_open\_f
~~~~~~~~~~~

CGNS ファイルを開く。

【形式】

    call **cg\_open\_f**\ (filename, mode, fid, ier)

【引数】

+-----------------+--------------+-----------+-----------------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                          |
+=================+==============+===========+===================================+
| character(\*)   | filename     | I         | ファイル名                        |
+-----------------+--------------+-----------+-----------------------------------+
| integer         | mode         | I         | オープンモード                    |
|                 |              |           |                                   |
|                 |              |           | 　CG\_MODE\_MODIFY：読み書き可    |
|                 |              |           |                                   |
|                 |              |           | 　CG\_MODE\_READ：読み込みのみ    |
|                 |              |           |                                   |
|                 |              |           | 　CG\_MODE\_WRITE：書き込みのみ   |
|                 |              |           |                                   |
|                 |              |           | 　CG\_MODE\_CLOSE：閉じる         |
+-----------------+--------------+-----------+-----------------------------------+
| integer         | fid          | O         | ファイルID                        |
+-----------------+--------------+-----------+-----------------------------------+
| integer         | ier          | O         | エラーコード。0なら成功           |
+-----------------+--------------+-----------+-----------------------------------+

cg\_iric\_init\_f
~~~~~~~~~~~~~~~~~

指定したファイルを読み込み・書き込み用にiRIClibから利用するため、内部変数を初期化し、ファイルを初期化する。

【形式】

    call **cg\_iric\_init\_f**\ (fid, ier)

【引数】

+-----------+--------------+-----------+------------------------------------------------------------------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                                                                           |
+===========+==============+===========+====================================================================================+
| integer   | fid          | I         | ファイルID                                                                         |
+-----------+--------------+-----------+------------------------------------------------------------------------------------+
| integer   | ier          | O         | エラーコード。0なら成功。ただし、格子生成プログラムで利用する場合は、 1 で成功。   |
+-----------+--------------+-----------+------------------------------------------------------------------------------------+

cg\_iric\_initread\_f
~~~~~~~~~~~~~~~~~~~~~

指定したファイルを読み込み専用でiRIClibから利用するため、内部変数を初期化する。

【形式】

    call **cg\_iric\_initread\_f** (fid, ier)

【引数】

+-----------+--------------+-----------+------------------------------------------------------------------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                                                                           |
+===========+==============+===========+====================================================================================+
| integer   | fid          | I         | ファイルID                                                                         |
+-----------+--------------+-----------+------------------------------------------------------------------------------------+
| integer   | ier          | O         | エラーコード。0なら成功。ただし、格子生成プログラムで利用する場合は、 1 で成功。   |
+-----------+--------------+-----------+------------------------------------------------------------------------------------+

cg\_initoption \_f
~~~~~~~~~~~~~~~~~~

ソルバーのオプションを指定する。

【形式】

    call **cg\_initoption\_f**\ (optionval, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | optionval    | I         | 指定するオプションの値    |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

cg\_iric\_read\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから整数型の計算条件・格子生成条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_integer\_f**\ (label, intvalue, ier)

【引数】

+-----------------+--------------+-----------+----------------------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                               |
+=================+==============+===========+========================================+
| character(\*)   | label        | I         | ソルバー定義ファイルで定義した変数名   |
+-----------------+--------------+-----------+----------------------------------------+
| integer         | intvalue     | O         | CGNSファイルから読み込まれた整数       |
+-----------------+--------------+-----------+----------------------------------------+
| integer         | ier          | O         | エラーコード。0なら成功                |
+-----------------+--------------+-----------+----------------------------------------+

cg\_iric\_read\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから倍精度の実数型の計算条件・格子生成条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_real\_f**\ (label, realvalue, ier)

【引数】

+--------------------+--------------+-----------+----------------------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                               |
+====================+==============+===========+========================================+
| character(\*)      | Label        | I         | ソルバー定義ファイルで定義した変数名   |
+--------------------+--------------+-----------+----------------------------------------+
| double precision   | realvalue    | O         | CGNSファイルから読み込まれた実数       |
+--------------------+--------------+-----------+----------------------------------------+
| integer            | ier          | O         | エラーコード。0なら成功                |
+--------------------+--------------+-----------+----------------------------------------+

cg\_iric\_read\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから単精度の実数型の計算条件・格子生成条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_realsingle\_f**\ (label, realvalue, ier)

【引数】

+-----------------+--------------+-----------+----------------------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                               |
+=================+==============+===========+========================================+
| character(\*)   | Label        | I         | ソルバー定義ファイルで定義した変数名   |
+-----------------+--------------+-----------+----------------------------------------+
| real            | realvalue    | O         | CGNSファイルから読み込まれた実数       |
+-----------------+--------------+-----------+----------------------------------------+
| integer         | ier          | O         | エラーコード。0なら成功                |
+-----------------+--------------+-----------+----------------------------------------+

cg\_iric\_read\_string\_f
~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから文字列型の計算条件・格子生成条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_string\_f**\ (label, strvalue, ier)

【引数】

+-----------------+--------------+-----------+----------------------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                               |
+=================+==============+===========+========================================+
| character(\*)   | label        | I         | ソルバー定義ファイルで定義した変数名   |
+-----------------+--------------+-----------+----------------------------------------+
| character(\*)   | strvalue     | O         | CGNSファイルから読み込まれた文字列     |
+-----------------+--------------+-----------+----------------------------------------+
| integer         | ier          | O         | エラーコード。0なら成功                |
+-----------------+--------------+-----------+----------------------------------------+

cg\_iric\_read\_functionalsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから関数型の計算条件・格子生成条件のサイズを読み込む。

【形式】

    call **cg\_iric\_read\_functionalsize\_f** (label, size, ier)

【引数】

+-----------------+--------------+-----------+------------------------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                                 |
+=================+==============+===========+==========================================+
| character(\*)   | label        | I         | ソルバー定義ファイルで定義した変数名     |
+-----------------+--------------+-----------+------------------------------------------+
| integer         | size         | O         | CGNSファイルから読み込まれた配列の長さ   |
+-----------------+--------------+-----------+------------------------------------------+
| integer         | ier          | O         | エラーコード。0なら成功                  |
+-----------------+--------------+-----------+------------------------------------------+

cg\_iric\_read\_functional\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから倍精度実数の関数型の計算条件・格子生成条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_functional\_f** (label, x, y, ier)

【引数】

+------------------------------------------------+--------------+-----------+----------------------------------------+
| **型**                                         | **変数名**   | **I/O**   | **内容**                               |
+================================================+==============+===========+========================================+
| character(\*)                                  | label        | I         | ソルバー定義ファイルで定義した変数名   |
+------------------------------------------------+--------------+-----------+----------------------------------------+
| double precision , dimension(:), allocatable   | x            | O         | Xの値の配列                            |
+------------------------------------------------+--------------+-----------+----------------------------------------+
| double precision, dimension(:), allocatable    | y            | O         | Yの値の配列                            |
+------------------------------------------------+--------------+-----------+----------------------------------------+
| integer                                        | ier          | O         | エラーコード。0なら成功                |
+------------------------------------------------+--------------+-----------+----------------------------------------+

cg\_iric\_read\_functional\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから単精度実数の関数型の計算条件・格子生成条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_functional\_realsingle\_f** (label, x, y,
    ier)

【引数】

+------------------------------------+--------------+-----------+----------------------------------------+
| **型**                             | **変数名**   | **I/O**   | **内容**                               |
+====================================+==============+===========+========================================+
| character(\*)                      | label        | I         | ソルバー定義ファイルで定義した変数名   |
+------------------------------------+--------------+-----------+----------------------------------------+
| real , dimension(:), allocatable   | x            | O         | Xの値の配列                            |
+------------------------------------+--------------+-----------+----------------------------------------+
| real, dimension(:), allocatable    | y            | O         | Yの値の配列                            |
+------------------------------------+--------------+-----------+----------------------------------------+
| integer                            | ier          | O         | エラーコード。0なら成功                |
+------------------------------------+--------------+-----------+----------------------------------------+

cg\_iric\_read\_functionalwithname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから関数型の計算条件・格子生成条件の値を読み込む。変数が1つ、値が複数の関数型の計算条件・格子生成条件の読み込みに利用する。

【形式】

    call **cg\_iric\_read\_functionalwithname\_f** (label, name, data,
    ier)

【引数】

+------------------------------------------------+--------------+-----------+------------------------------------------+
| **型**                                         | **変数名**   | **I/O**   | **内容**                                 |
+================================================+==============+===========+==========================================+
| character(\*)                                  | label        | I         | ソルバー定義ファイルで定義した変数名     |
+------------------------------------------------+--------------+-----------+------------------------------------------+
| character(\*)                                  | name         | I         | ソルバー定義ファイルで定義した値の名前   |
+------------------------------------------------+--------------+-----------+------------------------------------------+
| double precision , dimension(:), allocatable   | data         | O         | 値の配列                                 |
+------------------------------------------------+--------------+-----------+------------------------------------------+
| integer                                        | Ier          | O         | エラーコード。0なら成功                  |
+------------------------------------------------+--------------+-----------+------------------------------------------+

cg\_iric\_gotogridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

二次元構造格子を読み込む準備を行う。

【形式】

    call **cg\_iric\_gotogridcoord2d\_f**\ (nx, ny, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | nx           | O         | i方向格子点数             |
+-----------+--------------+-----------+---------------------------+
| integer   | ny           | O         | j方向格子点数             |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

cg\_iric\_gotogridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

三次元構造格子を読み込む準備を行う。

【形式】

    call **cg\_iric\_gotogridcoord3d\_f**\ (nx, ny, nz, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | nx           | O         | i方向格子点数             |
+-----------+--------------+-----------+---------------------------+
| integer   | ny           | O         | j方向格子点数             |
+-----------+--------------+-----------+---------------------------+
| integer   | nz           | O         | k方向格子点数             |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

cg\_iric\_getgridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~

二次元構造格子を読み込む。

【形式】

    call **cg\_iric\_getgridcoord2d\_f** (x, y, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| double precision, dimension(:), allocatable   | x            | O         | 格子点のx座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | O         | 格子点のy座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_getgridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~

三次元構造格子を読み込む。

【形式】

    call **cg\_iric\_getgridcoord3d\_f** (x, y, z, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| double precision, dimension(:), allocatable   | x            | O         | 格子点のx座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | O         | 格子点のy座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | z            | O         | 格子点のz座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_integer\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子の格子点で定義された整数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_integer\_node\_f** (label, values, ier)

【引数】

+-------------------------------------+--------------+-----------+---------------------------+
| **型**                              | **変数名**   | **I/O**   | **内容**                  |
+=====================================+==============+===========+===========================+
| character(\*)                       | label        | I         | 属性名                    |
+-------------------------------------+--------------+-----------+---------------------------+
| integer, dimension(:), llocatable   | values       | O         | 属性値                    |
+-------------------------------------+--------------+-----------+---------------------------+
| integer                             | ier          | O         | エラーコード。0なら成功   |
+-------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_real\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子の格子点で定義された倍精度実数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_real\_node\_f** (label, values, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | label        | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 属性値                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_integer\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子のセルで定義された整数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_integer\_cell\_f** (label, values, ier)

【引数】

+--------------------------------------+--------------+-----------+---------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                  |
+======================================+==============+===========+===========================+
| character(\*)                        | label        | I         | 属性名                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer, dimension(:), allocatable   | values       | O         | 属性値                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功   |
+--------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_real\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子のセルで定義された倍精度実数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_real\_cell\_f** (label, values, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | label        | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 属性値                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、グループの数を取得する。

【形式】

    call **cg\_iric\_read\_complex\_count\_f** (type, num, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | type         | I         | 属性名                    |
+-----------------+--------------+-----------+---------------------------+
| integer         | num          | O         | グループの数              |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_integer\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、整数型の条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_complex\_integer\_f** (type, num, name,
    value, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | type         | I         | 属性名                    |
+-----------------+--------------+-----------+---------------------------+
| integer         | num          | I         | グループの番号            |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | name         | I         | 条件の名前                |
+-----------------+--------------+-----------+---------------------------+
| integer         | value        | O         | 読み込まれた条件の値      |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_real\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、実数(倍精度)型の条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_complex\_real\_f** (type, num, name, value,
    ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| character(\*)      | type         | I         | 属性名                    |
+--------------------+--------------+-----------+---------------------------+
| integer            | num          | I         | グループの番号            |
+--------------------+--------------+-----------+---------------------------+
| character(\*)      | name         | I         | 条件の名前                |
+--------------------+--------------+-----------+---------------------------+
| double precision   | value        | O         | 読み込まれた条件の値      |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_realsingle\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、実数(単精度)型の条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_complex\_realsingle\_f** (type, num, name,
    value, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | type         | I         | 属性名                    |
+-----------------+--------------+-----------+---------------------------+
| integer         | num          | I         | グループの番号            |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | name         | I         | 条件の名前                |
+-----------------+--------------+-----------+---------------------------+
| real            | value        | O         | 読み込まれた条件の値      |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_string\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、文字列型の条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_complex\_string\_f** (type, num, name, value,
    ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | type         | I         | 属性名                    |
+-----------------+--------------+-----------+---------------------------+
| integer         | num          | I         | グループの番号            |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | name         | I         | 条件の名前                |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | value        | O         | 読み込まれた条件の値      |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_functionalsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、関数型の条件の変数のサイズを読み込む。

【形式】

    call **cg\_iric\_read\_complex\_functionalsize\_f** (type, num,
    name, size, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | type         | I         | 属性名                    |
+-----------------+--------------+-----------+---------------------------+
| integer         | num          | I         | グループの番号            |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | name         | I         | 条件の名前                |
+-----------------+--------------+-----------+---------------------------+
| integer         | size         | O         | 条件の配列の長さ          |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_functional\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、倍精度関数型の条件の変数の値を読み込む。

【形式】

    call **cg\_iric\_read\_complex\_functional\_f** (type, num, name, x,
    y, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | type         | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | num          | I         | グループの番号            |
+-----------------------------------------------+--------------+-----------+---------------------------+
| character(\*)                                 | name         | I         | 条件の名前                |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | O         | Xの値の配列               |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            |           | Yの値の配列               |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_functional\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、単精度関数型の条件の変数の値を読み込む。

【形式】

    call **cg\_iric\_read\_complex\_functional\_realsingle\_f** (type,
    num, name, x, y, ier)

【引数】

+-----------------------------------+--------------+-----------+---------------------------+
| **型**                            | **変数名**   | **I/O**   | **内容**                  |
+===================================+==============+===========+===========================+
| character(\*)                     | type         | I         | 属性名                    |
+-----------------------------------+--------------+-----------+---------------------------+
| integer                           | num          | I         | グループの番号            |
+-----------------------------------+--------------+-----------+---------------------------+
| character(\*)                     | name         | I         | 条件の名前                |
+-----------------------------------+--------------+-----------+---------------------------+
| real, dimension(:), allocatable   | x            | O         | Xの値の配列               |
+-----------------------------------+--------------+-----------+---------------------------+
| real, dimension(:), allocatable   | y            | O         | Yの値の配列               |
+-----------------------------------+--------------+-----------+---------------------------+
| integer                           | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_complex\_functionalwithname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

複合型格子属性の、倍精度関数型の条件の変数の値を読み込む。変数が1つ、値が複数の関数型の境界条件の読み込みに利用する。

【形式】

    call **cg\_iric\_read\_complex\_functionalwithname\_f** (type, num,
    name, paramname, data, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | type         | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | num          | I         | グループの番号            |
+-----------------------------------------------+--------------+-----------+---------------------------+
| character(\*)                                 | name         | I         | 条件の名前                |
+-----------------------------------------------+--------------+-----------+---------------------------+
| character(\*)                                 | paramname    | I         | 値の名前                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | data         | O         | 値の配列                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_complex\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子の格子点で定義された複合型の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_complex\_node\_f** (label, values, ier)

【引数】

+--------------------------------------+--------------+-----------+---------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                  |
+======================================+==============+===========+===========================+
| character(\*)                        | label        | I         | 属性名                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer, dimension(:), allocatable   | values       | O         | 属性値                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功   |
+--------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_complex\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子のセルで定義された複合型の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_complex\_cell\_f** (label, values, ier)

【引数】

+--------------------------------------+--------------+-----------+---------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                  |
+======================================+==============+===========+===========================+
| character(\*)                        | label        | I         | 属性名                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer, dimension(:), allocatable   | values       | O         | 属性値                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功   |
+--------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_functionaltimesize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

次元「時刻」(Time) を持つ格子属性の、時刻の数を調べる。

【形式】

    call **cg\_iric\_read\_grid\_functionaltimesize\_f** (label, count,
    ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | label        | I         | 属性名                    |
+-----------------+--------------+-----------+---------------------------+
| integer         | count        | O         | 時刻の数                  |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_functionaltime\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

次元「時刻」(Time)の値を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_functionaltime\_f** (label, values,
    ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | label        | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 時刻の値                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_functionaldimensionsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

次元の数を調べる。

【形式】

    call **cg\_iric\_read\_grid\_functionaltime\_f** (label, dimname,
    count, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | label        | I         | 属性名                    |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | dimname      | I         | 次元名                    |
+-----------------+--------------+-----------+---------------------------+
| integer         | count        | O         | 時刻の数                  |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_functionaldimension\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

整数の次元の値を読み込む

【形式】

    call **cg\_iric\_read\_grid\_functionaldimension\_integer\_f**
    (label, dimname,values, ier)

【引数】

+--------------------------------------+--------------+-----------+---------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                  |
+======================================+==============+===========+===========================+
| character(\*)                        | label        | I         | 属性名                    |
+--------------------------------------+--------------+-----------+---------------------------+
| character(\*)                        | dimname      | I         | 次元名                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer, dimension(:), allocatable   | values       | O         | 次元の値                  |
+--------------------------------------+--------------+-----------+---------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功   |
+--------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_functionaldimension\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

実数の次元の値を読み込む

【形式】

    call **cg\_iric\_read\_grid\_functionaldimension\_real\_f** (label,
    dimname,values, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | label        | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 時刻の値                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_grid\_functional\_integer\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

次元「時刻」を持つ、格子点で定義された整数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_functional\_integer\_node\_f** (label,
    dimid, values, ier)

【引数】

+--------------------------------------+--------------+-----------+----------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                   |
+======================================+==============+===========+============================+
| character(\*)                        | label        | I         | 属性名                     |
+--------------------------------------+--------------+-----------+----------------------------+
| integer                              | dimid        | I         | 時刻のID (1 ～ 時刻の数)   |
+--------------------------------------+--------------+-----------+----------------------------+
| integer, dimension(:), allocatable   | values       | O         | 属性値                     |
+--------------------------------------+--------------+-----------+----------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功    |
+--------------------------------------+--------------+-----------+----------------------------+

cg\_iric\_read\_grid\_functional\_real\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

次元「時刻」を持つ、格子点で定義された倍精度実数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_functional\_real\_node\_f** (label,
    dimid, values, ier)

【引数】

+-----------------------------------------------+--------------+-----------+----------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                   |
+===============================================+==============+===========+============================+
| character(\*)                                 | label        | I         | 属性名                     |
+-----------------------------------------------+--------------+-----------+----------------------------+
| integer                                       | dimid        | I         | 時刻のID (1 ～ 時刻の数)   |
+-----------------------------------------------+--------------+-----------+----------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 属性値                     |
+-----------------------------------------------+--------------+-----------+----------------------------+
| integer                                       | Ier          | O         | エラーコード。0なら成功    |
+-----------------------------------------------+--------------+-----------+----------------------------+

cg\_iric\_read\_grid\_functional\_integer\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

次元「時刻」を持つ、セルで定義された整数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_functional\_integer\_cell\_f** (label,
    dimid, values, ier)

【引数】

+--------------------------------------+--------------+-----------+----------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                   |
+======================================+==============+===========+============================+
| character(\*)                        | label        | I         | 属性名                     |
+--------------------------------------+--------------+-----------+----------------------------+
| integer                              | dimid        | I         | 時刻のID (1 ～ 時刻の数)   |
+--------------------------------------+--------------+-----------+----------------------------+
| integer, dimension(:), allocatable   | values       | O         | 属性値                     |
+--------------------------------------+--------------+-----------+----------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功    |
+--------------------------------------+--------------+-----------+----------------------------+

cg\_iric\_read\_grid\_functional\_real\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

次元「時刻」を持つ、セルで定義された倍精度実数の属性を読み込む。

【形式】

    call **cg\_iric\_read\_grid\_functional\_real\_cell\_f** (label,
    dimid, values, ier)

【引数】

+-----------------------------------------------+--------------+-----------+----------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                   |
+===============================================+==============+===========+============================+
| character(\*)                                 | label        | I         | 属性名                     |
+-----------------------------------------------+--------------+-----------+----------------------------+
| integer                                       | dimid        | I         | 時刻のID (1 ～ 時刻の数)   |
+-----------------------------------------------+--------------+-----------+----------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 属性値                     |
+-----------------------------------------------+--------------+-----------+----------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功    |
+-----------------------------------------------+--------------+-----------+----------------------------+

cg\_iric\_read\_bc\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

境界条件の数を取得する。

【形式】

    call **cg\_iric\_read\_bc\_count\_f** (type, num)

【引数】

+-----------------+--------------+-----------+--------------------+
| **型**          | **変数名**   | **I/O**   | **内容**           |
+=================+==============+===========+====================+
| character(\*)   | type         | I         | 境界条件の識別名   |
+-----------------+--------------+-----------+--------------------+
| integer         | num          | O         | 境界条件の数       |
+-----------------+--------------+-----------+--------------------+

cg\_iric\_read\_bc\_indicessize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

境界条件が設定された要素 (格子点もしくはセル) の数を取得する。

【形式】

    call **cg\_iric\_read\_bc\_indicessize\_f** (type, num, size, ier)

【引数】

+-----------------+--------------+-----------+--------------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                       |
+=================+==============+===========+================================+
| character(\*)   | type         | I         | 境界条件の識別名               |
+-----------------+--------------+-----------+--------------------------------+
| integer         | num          | I         | 境界条件の番号                 |
+-----------------+--------------+-----------+--------------------------------+
| integer         | size         | O         | 境界条件が設定された要素の数   |
+-----------------+--------------+-----------+--------------------------------+
| integer         | ier          | O         | エラーコード。0なら成功        |
+-----------------+--------------+-----------+--------------------------------+

cg\_iric\_read\_bc\_indices\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

境界条件が設定された要素 (格子点もしくはセル)
のインデックスの配列を取得する。

【形式】

    call **cg\_iric\_read\_bc\_indices\_f** (type, num, indices, ier)

【引数】

+----------------------------------------+--------------+-----------+--------------------------------------------------+
| **型**                                 | **変数名**   | **I/O**   | **内容**                                         |
+========================================+==============+===========+==================================================+
| character(\*)                          | type         | I         | 境界条件の識別名                                 |
+----------------------------------------+--------------+-----------+--------------------------------------------------+
| integer                                | num          | I         | 境界条件の番号                                   |
+----------------------------------------+--------------+-----------+--------------------------------------------------+
| integer, dimension(2,:), allocatable   | indices      | O         | 境界条件が設定された要素のインデックスの配列。   |
+----------------------------------------+--------------+-----------+--------------------------------------------------+
| integer                                | ier          | O         | エラーコード。0なら成功                          |
+----------------------------------------+--------------+-----------+--------------------------------------------------+

indices に返される値は、境界条件が設定される位置によって、 表
6?17に示すように異なります。格子点、セルでは、値2つで一つの要素を定義しているのに対し、辺では値4つで1つの要素を定義している点にご注意下さい。

表 6?17 境界条件を設定された位置と indices に返される値の関係

+-----------+--------------------------------+----------------------------------------------+
| **No.**   | **境界条件を設定された位置**   | **indicesに返される値**                      |
+===========+================================+==============================================+
| 1         | 格子点 (node)                  | (格子点1のI), (格子点1のJ)                   |
|           |                                |                                              |
|           |                                | …                                            |
|           |                                |                                              |
|           |                                | (格子点NのI), (格子点NのJ)                   |
+-----------+--------------------------------+----------------------------------------------+
| 2         | セル (cell)                    | (セル1のI), (セル1のJ)                       |
|           |                                |                                              |
|           |                                | …                                            |
|           |                                |                                              |
|           |                                | (セルNのI), (セルNのJ)                       |
+-----------+--------------------------------+----------------------------------------------+
| 3         | 辺 (edge)                      | (辺1の開始格子点のI), (辺1の開始格子点のJ)   |
|           |                                |                                              |
|           |                                | (辺1の終了格子点のI), (辺1の終了格子点のJ)   |
|           |                                |                                              |
|           |                                | …                                            |
|           |                                |                                              |
|           |                                | (辺Nの開始格子点のI), (辺Nの開始格子点のJ)   |
|           |                                |                                              |
|           |                                | (辺Nの終了格子点のI), (辺Nの終了格子点のJ)   |
+-----------+--------------------------------+----------------------------------------------+

cg\_iric\_read\_bc\_integer\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

整数型の境界条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_bc\_integer\_f** (type, num, name, value,
    ier)

【引数】

+-----------------+--------------+-----------+----------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                   |
+=================+==============+===========+============================+
| character(\*)   | type         | I         | 境界条件の識別名           |
+-----------------+--------------+-----------+----------------------------+
| integer         | num          | I         | 境界条件の番号             |
+-----------------+--------------+-----------+----------------------------+
| character(\*)   | name         | I         | 境界条件の属性の名前       |
+-----------------+--------------+-----------+----------------------------+
| integer         | value        | O         | 読み込まれた境界条件の値   |
+-----------------+--------------+-----------+----------------------------+
| integer         | ier          | O         | エラーコード。0なら成功    |
+-----------------+--------------+-----------+----------------------------+

cg\_iric\_read\_bc\_real\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

実数(倍精度)型の境界条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_bc\_real\_f** (type, num, name, value, ier)

【引数】

+--------------------+--------------+-----------+----------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                   |
+====================+==============+===========+============================+
| character(\*)      | type         | I         | 境界条件の識別名           |
+--------------------+--------------+-----------+----------------------------+
| integer            | num          | I         | 境界条件の番号             |
+--------------------+--------------+-----------+----------------------------+
| character(\*)      | name         | I         | 境界条件の属性の名前       |
+--------------------+--------------+-----------+----------------------------+
| double precision   | value        | O         | 読み込まれた境界条件の値   |
+--------------------+--------------+-----------+----------------------------+
| integer            | ier          | O         | エラーコード。0なら成功    |
+--------------------+--------------+-----------+----------------------------+

cg\_iric\_read\_bc\_realsingle\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

実数(単精度)型の境界条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_bc\_realsingle\_f** (type, num, name, value,
    ier)

【引数】

+-----------------+--------------+-----------+----------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                   |
+=================+==============+===========+============================+
| character(\*)   | type         | I         | 境界条件の識別名           |
+-----------------+--------------+-----------+----------------------------+
| integer         | num          | I         | 境界条件の番号             |
+-----------------+--------------+-----------+----------------------------+
| character(\*)   | name         | I         | 境界条件の属性の名前       |
+-----------------+--------------+-----------+----------------------------+
| real            | value        | O         | 読み込まれた境界条件の値   |
+-----------------+--------------+-----------+----------------------------+
| integer         | ier          | O         | エラーコード。0なら成功    |
+-----------------+--------------+-----------+----------------------------+

cg\_iric\_read\_bc\_string\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

文字列型の境界条件の値を読み込む。

【形式】

    call **cg\_iric\_read\_bc\_string\_f** (type, num, name, value, ier)

【引数】

+-----------------+--------------+-----------+----------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                   |
+=================+==============+===========+============================+
| character(\*)   | type         | I         | 境界条件の識別名           |
+-----------------+--------------+-----------+----------------------------+
| integer         | num          | I         | 境界条件の番号             |
+-----------------+--------------+-----------+----------------------------+
| character(\*)   | name         | I         | 境界条件の属性の名前       |
+-----------------+--------------+-----------+----------------------------+
| character(\*)   | value        | O         | 読み込まれた境界条件の値   |
+-----------------+--------------+-----------+----------------------------+
| integer         | ier          | O         | エラーコード。0なら成功    |
+-----------------+--------------+-----------+----------------------------+

cg\_iric\_read\_bc\_functionalsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

関数型の境界条件の変数のサイズを読み込む。

【形式】

    call **cg\_iric\_read\_bc\_functionalsize\_f** (type, num, name,
    size, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | type         | I         | 境界条件の識別名          |
+-----------------+--------------+-----------+---------------------------+
| integer         | num          | I         | 境界条件の番号            |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | name         | I         | 境界条件の属性の名前      |
+-----------------+--------------+-----------+---------------------------+
| integer         | size         | O         | 境界条件の配列の長さ      |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_bc\_functional\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

倍精度関数型の境界条件の変数の値を読み込む。

【形式】

    call **cg\_iric\_read\_bc\_functional\_f** (type, num, name, x, y,
    ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | type         | I         | 境界条件の識別名          |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | num          | I         | 境界条件の番号            |
+-----------------------------------------------+--------------+-----------+---------------------------+
| character(\*)                                 | name         | I         | 境界条件の属性の名前      |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | O         | Xの値の配列               |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | O         | Yの値の配列               |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_bc\_functional\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

単精度関数型の境界条件の変数の値を読み込む。

【形式】

    call **cg\_iric\_read\_bc\_functional\_realsingle\_f** (type, num,
    name, x, y, ier)

【引数】

+-----------------------------------+--------------+-----------+---------------------------+
| **型**                            | **変数名**   | **I/O**   | **内容**                  |
+===================================+==============+===========+===========================+
| character(\*)                     | type         | I         | 境界条件の識別名          |
+-----------------------------------+--------------+-----------+---------------------------+
| integer                           | num          | I         | 境界条件の番号            |
+-----------------------------------+--------------+-----------+---------------------------+
| character(\*)                     | name         | I         | 境界条件の属性の名前      |
+-----------------------------------+--------------+-----------+---------------------------+
| real, dimension(:), allocatable   | x            | O         | Xの値の配列               |
+-----------------------------------+--------------+-----------+---------------------------+
| real, dimension(:), allocatable   | y            | O         | Yの値の配列               |
+-----------------------------------+--------------+-----------+---------------------------+
| integer                           | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_bc\_functionalwithname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

倍精度関数型の境界条件の変数の値を読み込む。変数が1つ、値が複数の関数型の境界条件の読み込みに利用する。

【形式】

    call **cg\_iric\_read\_bc\_functionalwithname\_f** (type, num, name,
    paramname, data, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | type         | I         | 境界条件の識別名          |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | num          | I         | 境界条件の番号            |
+-----------------------------------------------+--------------+-----------+---------------------------+
| character(\*)                                 | name         | I         | 境界条件の属性の名前      |
+-----------------------------------------------+--------------+-----------+---------------------------+
| character(\*)                                 | paramname    | I         | 値の名前                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | data         | O         | 値の配列                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_geo\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから地形データの数を読み込みます。

【形式】

    call **cg\_iric\_read\_geo\_count\_f** (name, geocount, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | name         | I         | 地理情報種類              |
+-----------------+--------------+-----------+---------------------------+
| integer         | geocount     | O         | 地理情報の数              |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_geo\_filename\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CGNSファイルから地形データのファイル名と種類を読み込みます。

【形式】

    call **cg\_iric\_read\_geo\_filename\_f**\ (name, geoid,
    geofilename, geotype, ier)

【引数】

+-----------------+---------------+-----------+----------------------------+
| **型**          | **変数名**    | **I/O**   | **内容**                   |
+=================+===============+===========+============================+
| character(\*)   | name          | I         | 地理情報種類               |
+-----------------+---------------+-----------+----------------------------+
| integer         | geoid         | I         | 読み込む地形データの番号   |
+-----------------+---------------+-----------+----------------------------+
| character(\*)   | geofilename   | O         | ファイル名                 |
+-----------------+---------------+-----------+----------------------------+
| integer         | geotype       | O         | 地形データの種類           |
+-----------------+---------------+-----------+----------------------------+
| integer         | ier           | O         | エラーコード。0なら成功    |
+-----------------+---------------+-----------+----------------------------+

iric\_geo\_polygon\_open\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンファイルを開く。

【形式】

    call **iric\_geo\_polygon\_open\_f**\ (filename, pid, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | filename     | I         | ファイル名                |
+-----------------+--------------+-----------+---------------------------+
| integer         | Pid          | O         | 開いたポリゴンのID        |
+-----------------+--------------+-----------+---------------------------+
| integer         | Ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_read\_integervalue\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンの値を整数で返す。

【形式】

    call **iric\_geo\_polygon\_read\_integervalue\_f**\ (pid, intval,
    ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | Pid          | I         | ポリゴンのID              |
+-----------+--------------+-----------+---------------------------+
| integer   | intval       | O         | ポリゴンの値              |
+-----------+--------------+-----------+---------------------------+
| integer   | Ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_read\_realvalue\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンの値を実数で返す。

【形式】

    call **iric\_geo\_polygon\_read\_realvalue\_f**\ (pid, realval, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| integer            | Pid          | I         | ポリゴンのID              |
+--------------------+--------------+-----------+---------------------------+
| double precision   | realval      | O         | ポリゴンの値              |
+--------------------+--------------+-----------+---------------------------+
| integer            | Ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_read\_pointcount\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンの頂点の数を返す。

【形式】

    call **iric\_geo\_polygon\_read\_pointcount\_f**\ (pid, count, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | pid          | I         | ポリゴンのID              |
+-----------+--------------+-----------+---------------------------+
| integer   | count        | O         | ポリゴンの頂点の数        |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_read\_points\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンの頂点の座標を返す。

【形式】

    call **iric\_geo\_polygon\_read\_points\_f**\ (pid, x, y, ier)

【引数】

+------------------------------------------------+--------------+-----------+---------------------------+
| **型**                                         | **変数名**   | **I/O**   | **内容**                  |
+================================================+==============+===========+===========================+
| integer                                        | pid          | I         | ポリゴンのID              |
+------------------------------------------------+--------------+-----------+---------------------------+
| double precision , dimension(:), allocatable   | x            | O         | ポリゴン頂点のX座標       |
+------------------------------------------------+--------------+-----------+---------------------------+
| double precision , dimension(:), allocatable   | y            | O         | ポリゴン頂点のY座標       |
+------------------------------------------------+--------------+-----------+---------------------------+
| integer                                        | ier          | O         | エラーコード。0なら成功   |
+------------------------------------------------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_read\_holecount\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンに開いた穴の数を返す。

【形式】

    call **iric\_geo\_polygon\_read\_holecount\_f**\ (pid, holecount,
    ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | pid          | I         | ポリゴンのID              |
+-----------+--------------+-----------+---------------------------+
| integer   | holecount    | O         | ポリゴンに開いた穴の数    |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_read\_holepointcount\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンの穴の頂点の数を返す。

【形式】

    call **iric\_geo\_polygon\_read\_holepointcount\_f**\ (pid, holeid,
    count, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | pid          | I         | ポリゴンのID              |
+-----------+--------------+-----------+---------------------------+
| integer   | holeid       | I         | 穴のID                    |
+-----------+--------------+-----------+---------------------------+
| integer   | count        | O         | ポリゴンの頂点の数        |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_read\_holepoints\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンの穴の頂点の座標を返す。

【形式】

    call **iric\_geo\_polygon\_read\_holepoints\_f**\ (pid, holeid, x,
    y, ier)

【引数】

+------------------------------------------------+--------------+-----------+---------------------------+
| **型**                                         | **変数名**   | **I/O**   | **内容**                  |
+================================================+==============+===========+===========================+
| integer                                        | pid          | I         | ポリゴンのID              |
+------------------------------------------------+--------------+-----------+---------------------------+
| integer                                        | holeid       | I         | 穴のID                    |
+------------------------------------------------+--------------+-----------+---------------------------+
| double precision , dimension(:), allocatable   | x            | O         | ポリゴン頂点のX座標       |
+------------------------------------------------+--------------+-----------+---------------------------+
| double precision , dimension(:), allocatable   | y            | O         | ポリゴン頂点のY座標       |
+------------------------------------------------+--------------+-----------+---------------------------+
| integer                                        | ier          | O         | エラーコード。0なら成功   |
+------------------------------------------------+--------------+-----------+---------------------------+

iric\_geo\_polygon\_close\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ポリゴンファイルを閉じる。

【形式】

    call **iric\_geo\_polygon\_close\_f**\ (pid, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | pid          | I         | ポリゴンのID              |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_open\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

河川測量データを開く。

【形式】

    call **iric\_geo\_riversurvey\_open\_f**\ (filename, rid, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | filename     | I         | ファイル名                |
+-----------------+--------------+-----------+---------------------------+
| integer         | rid          | O         | 河川測量データのID        |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

河川横断線の数を返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_count\_f**\ (rid, count, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | rid          | I         | 河川測量データのID        |
+-----------+--------------+-----------+---------------------------+
| integer   | count        | O         | 河川横断線の数            |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_position\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の中心点の座標を返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_position\_f**\ (rid, pointid,
    x, y, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| integer            | rid          | I         | 河川測量データのID        |
+--------------------+--------------+-----------+---------------------------+
| integer            | pointid      | I         | 横断線のID                |
+--------------------+--------------+-----------+---------------------------+
| double precision   | x            | O         | 中心点のX座標             |
+--------------------+--------------+-----------+---------------------------+
| double precision   | y            | O         | 中心点のY座標             |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_direction\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の向きを返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_direction\_f**\ (rid, pointid,
    vx, vy, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| integer            | rid          | I         | 河川測量データのID        |
+--------------------+--------------+-----------+---------------------------+
| integer            | pointid      | I         | 横断線のID                |
+--------------------+--------------+-----------+---------------------------+
| double precision   | vx           | O         | 向きのX座標               |
+--------------------+--------------+-----------+---------------------------+
| double precision   | vx           | O         | 向きのY座標               |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_name\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の名前を文字列として返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_name\_f**\ (rid, pointid, name,
    ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| integer         | rid          | I         | 河川測量データのID        |
+-----------------+--------------+-----------+---------------------------+
| integer         | pointid      | I         | 横断線のID                |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | name         |           | 横断線の名前              |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_realname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の名前を実数値として返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_realname\_f**\ (rid, pointid,
    realname, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| integer            | rid          | I         | 河川測量データのID        |
+--------------------+--------------+-----------+---------------------------+
| integer            | pointid      | I         | 横断線のID                |
+--------------------+--------------+-----------+---------------------------+
| double precision   | realname     | O         | 横断線の名前              |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_leftshift\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の標高データのシフト量を返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_leftshift\_f**\ (rid, pointid,
    shift, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| integer            | rid          | I         | 河川測量データのID        |
+--------------------+--------------+-----------+---------------------------+
| integer            | pointid      | I         | 横断線のID                |
+--------------------+--------------+-----------+---------------------------+
| double precision   | shift        | O         | シフト量                  |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_altitudecount\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の標高データの数を返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_altitudecount\_f**\ (rid,
    pointid, count, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | rid          | I         | 河川測量データのID        |
+-----------+--------------+-----------+---------------------------+
| integer   | pointid      | I         | 横断線のID                |
+-----------+--------------+-----------+---------------------------+
| integer   | count        | O         | 横断線の標高データの数    |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

iric\_geo\_riversurvey\_read\_altitudes\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の中心点の座標を返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_altitudes\_f**\ (rid, pointid,
    position, height, active, ier)

【引数】

+------------------------------------------------+--------------+-----------+------------------------------------------------------------------+
| **型**                                         | **変数名**   | **I/O**   | **内容**                                                         |
+================================================+==============+===========+==================================================================+
| integer                                        | rid          | I         | 河川測量データのID                                               |
+------------------------------------------------+--------------+-----------+------------------------------------------------------------------+
| pointid                                        | pointid      | I         | 横断線のID                                                       |
+------------------------------------------------+--------------+-----------+------------------------------------------------------------------+
| double precision , dimension(:), allocatable   | position     | O         | 標高データの位置 (0より小さい = 左岸側, 0 より大きい = 右岸側)   |
+------------------------------------------------+--------------+-----------+------------------------------------------------------------------+
| double precision , dimension(:), allocatable   | height       | O         | 標高データの高さ                                                 |
+------------------------------------------------+--------------+-----------+------------------------------------------------------------------+
| integer, dimension(:), allocatable             | active       | O         | 標高データの有効/無効 (1: 有効, 0: 無効)                         |
+------------------------------------------------+--------------+-----------+------------------------------------------------------------------+
| integer                                        | ier          | O         | エラーコード。0なら成功                                          |
+------------------------------------------------+--------------+-----------+------------------------------------------------------------------+

iric\_geo\_riversurvey\_read\_fixedpointl\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の左岸延長線のデータを返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_fixedpointl\_f**\ (rid,
    pointid, set, directionx, directiony, index, ier)

【引数】

+--------------------+--------------+-----------+------------------------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                                 |
+====================+==============+===========+==========================================+
| integer            | rid          | I         | 河川測量データのID                       |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | pointid      | I         | 横断線のID                               |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | set          | O         | 左岸延長線が登録されていたら1            |
+--------------------+--------------+-----------+------------------------------------------+
| double precision   | directionx   | O         | 左岸延長線の向きのX成分                  |
+--------------------+--------------+-----------+------------------------------------------+
| double precision   | direction    | O         | 左岸延長線の向きのY成分                  |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | index        | O         | 左岸延長線の開始位置の標高データの番号   |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | ier          | O         | エラーコード。0なら成功                  |
+--------------------+--------------+-----------+------------------------------------------+

iric\_geo\_riversurvey\_read\_fixedpointr\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線の右岸延長線のデータを返す。

【形式】

    call **iric\_geo\_riversurvey\_read\_fixedpointr\_f**\ (rid,
    pointid, set, directionx, directiony, index, ier)

【引数】

+--------------------+--------------+-----------+------------------------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                                 |
+====================+==============+===========+==========================================+
| integer            | rid          | I         | 河川測量データのID                       |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | pointid      | I         | 横断線のID                               |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | set          | O         | 右岸延長線が登録されていたら1            |
+--------------------+--------------+-----------+------------------------------------------+
| double precision   | directionx   | O         | 右岸延長線の向きのX成分                  |
+--------------------+--------------+-----------+------------------------------------------+
| double precision   | direction    | O         | 右岸延長線の向きのY成分                  |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | index        | O         | 右岸延長線の開始位置の標高データの番号   |
+--------------------+--------------+-----------+------------------------------------------+
| integer            | ier          | O         | エラーコード。0なら成功                  |
+--------------------+--------------+-----------+------------------------------------------+

iric\_geo\_riversurvey\_read\_watersurfaceelevation\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

横断線での水面標高のデータを返す。

【形式】

    call
    **iric\_geo\_riversurvey\_read\_watersurfaceelevation\_f**\ (rid,
    pointid, set, value, ier)

【引数】

+--------------------+--------------+-----------+-------------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                      |
+====================+==============+===========+===============================+
| integer            | rid          | I         | 河川測量データのID            |
+--------------------+--------------+-----------+-------------------------------+
| integer            | pointid      | I         | 横断線のID                    |
+--------------------+--------------+-----------+-------------------------------+
| integer            | set          | O         | 水面標高が登録されていたら1   |
+--------------------+--------------+-----------+-------------------------------+
| double precision   | value        | O         | 水面標高                      |
+--------------------+--------------+-----------+-------------------------------+
| integer            | ier          | O         | エラーコード。0なら成功       |
+--------------------+--------------+-----------+-------------------------------+

iric\_geo\_riversurvey\_close\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

河川測量データファイルを閉じる。

【形式】

    call **iric\_geo\_** **riversurvey\_close\_f**\ (pid, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | rid          | I         | 河川測量データのID        |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

cg\_iric\_writegridcoord1d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1次元構造格子を出力する。

【形式】

    call **cg\_iric\_writegridcoord1d\_f** (nx, x, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| integer                                       | nx           | I         | i方向格子点数             |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | I         | 格子点のx座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_writegridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2次元構造格子を出力する。

【形式】

    call **cg\_iric\_writegridcoord2d\_f** (nx, ny, x, y, ier)

【引数】

+-------------------------------------------------+--------------+-----------+---------------------------+
| **型**                                          | **変数名**   | **I/O**   | **内容**                  |
+=================================================+==============+===========+===========================+
| integer                                         | nx           | I         | i方向格子点数             |
+-------------------------------------------------+--------------+-----------+---------------------------+
| integer                                         | ny           | I         | j方向格子点数             |
+-------------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:,:), allocatable   | x            | I         | 格子点のx座標値           |
+-------------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:,:), allocatable   | y            | I         | 格子点のy座標値           |
+-------------------------------------------------+--------------+-----------+---------------------------+
| integer                                         | ier          | O         | エラーコード。0なら成功   |
+-------------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_writegridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

3次元構造格子を出力する。

【形式】

    call **cg\_iric\_writegridcoord3d\_f** (nx, ny, nz, x, y, z, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| integer                                       | nx           | I         | i方向格子点数             |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ny           | I         | j方向格子点数             |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | nz           | I         | k方向格子点数             |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | I         | 格子点のx座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | I         | 格子点のy座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | z            | I         | 格子点のz座標値           |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_grid\_integer\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子の格子点で定義された整数の属性を出力する。

【形式】

    call **cg\_iric\_write\_grid\_integer\_node\_f** (label, values,
    ier)

【引数】

+-------------------------------------+--------------+-----------+---------------------------+
| **型**                              | **変数名**   | **I/O**   | **内容**                  |
+=====================================+==============+===========+===========================+
| character(\*)                       | label        | I         | 属性名                    |
+-------------------------------------+--------------+-----------+---------------------------+
| integer, dimension(:), llocatable   | values       | O         | 属性値                    |
+-------------------------------------+--------------+-----------+---------------------------+
| integer                             | ier          | O         | エラーコード。0なら成功   |
+-------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_grid\_real\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子の格子点で定義された倍精度実数の属性を出力する。

【形式】

    call **cg\_iric\_write\_grid\_real\_node\_f** (label, values, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | label        | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 属性値                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_grid\_integer\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子のセルで定義された整数の属性を出力する。

【形式】

    call **cg\_iric\_write\_grid\_integer\_cell\_f** (label, values,
    ier)

【引数】

+--------------------------------------+--------------+-----------+---------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                  |
+======================================+==============+===========+===========================+
| character(\*)                        | label        | I         | 属性名                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer, dimension(:), allocatable   | values       | O         | 属性値                    |
+--------------------------------------+--------------+-----------+---------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功   |
+--------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_grid\_real\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

構造格子のセルで定義された倍精度実数の属性を出力する。

【形式】

    call **cg\_iric\_read\_grid\_real\_cell\_f** (label, values, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| character(\*)                                 | label        | I         | 属性名                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | values       | O         | 属性値                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_time\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

時刻を出力する。

【形式】

    call **cg\_iric\_write\_sol\_time\_f** (time, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| double precision   | time         | I         | 時刻                      |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_iteration\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ループ回数を出力する。

【形式】

    call **cg\_iric\_write\_sol\_iteration\_f** (iteration, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | iteration    | I         | ループ回数                |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_gridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2次元構造格子を出力する。

【形式】

    call **cg\_iric\_write\_sol\_gridcoord2d\_f** (x, y, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| double precision, dimension(:), allocatable   | x            | I         | X座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | I         | Y座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_gridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

3次元構造格子を出力する。

【形式】

    call **cg\_iric\_write\_sol\_gridcoord3d\_f** (x, y, z, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| double precision, dimension(:), allocatable   | x            | I         | X座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | I         | Y座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | z            | I         | Z座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_baseiterative\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

整数の計算結果を出力する。

【形式】

    call **cg\_iric\_write\_sol\_baseiterative\_integer\_f** (label,
    val, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | label        | I         | 出力する値の名前          |
+-----------------+--------------+-----------+---------------------------+
| integer         | val          | I         | 出力する値                |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_baseiterative\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

倍精度実数の計算結果を出力する。

【形式】

    call **cg\_iric\_write\_sol\_baseiterative\_real\_f** (label, val,
    ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| character(\*)      | label        | I         | 出力する値の名前          |
+--------------------+--------------+-----------+---------------------------+
| double precision   | val          | I         | 出力する値                |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

整数の格子点ごとに値を持つ計算結果を出力する。

【形式】

    call **cg\_iric\_write\_sol\_integer\_f** (label, val, ier)

【引数】

+--------------------------------------+--------------+-----------+--------------------------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                                   |
+======================================+==============+===========+============================================+
| character(\*)                        | label        | I         | 出力する値の名前                           |
+--------------------------------------+--------------+-----------+--------------------------------------------+
| integer, imension(:,:),allocatable   | val          | I         | 出力する値（3次元格子の場合、型は          |
|                                      |              |           |                                            |
|                                      |              |           | integer, dimension(:,:,:), allocatable）   |
+--------------------------------------+--------------+-----------+--------------------------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功                    |
+--------------------------------------+--------------+-----------+--------------------------------------------+

cg\_iric\_write\_sol\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

倍精度実数の格子点ごとに値を持つ計算結果を出力する。

【形式】

    call **cg\_iric\_write\_sol\_real\_f** (label, val, ier)

【引数】

+-------------------------------------------------+--------------+-----------+------------------------------------------------------+
| **型**                                          | **変数名**   | **I/O**   | **内容**                                             |
+=================================================+==============+===========+======================================================+
| character(\*)                                   | label        | I         | 出力する値の名前                                     |
+-------------------------------------------------+--------------+-----------+------------------------------------------------------+
| double precision, dimension(:,:), allocatable   | val          | I         | 出力する値（3次元格子の場合、型は                    |
|                                                 |              |           |                                                      |
|                                                 |              |           | double precision , dimension(:,:,:), allocatable）   |
+-------------------------------------------------+--------------+-----------+------------------------------------------------------+
| integer                                         | ier          | O         | エラーコード。0なら成功                              |
+-------------------------------------------------+--------------+-----------+------------------------------------------------------+

cg\_iric\_write\_sol\_particle\_pos2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

粒子の位置を出力する。 (2次元)

【形式】

    call **cg\_iric\_write\_sol\_particle\_pos2d\_f** (count, x, y, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| integer                                       | count        | I         | 粒子の数                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | I         | X座標.                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | I         | Y座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_write\_sol\_particle\_pos3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

粒子の位置を出力する。 (3次元)

【形式】

    call **cg\_iric\_write\_sol\_particle\_pos3d\_f** (count, x, y, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| integer                                       | count        | I         | 粒子の数                  |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | I         | X座標.                    |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | I         | Y座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | z            | I         | Z座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

iric\_check\_cancel\_f
~~~~~~~~~~~~~~~~~~~~~~

ユーザがソルバーをキャンセルしたか確認する。

【形式】

    call **iric\_check\_cancel\_f** (canceled)

【引数】

+-----------+--------------+-----------+----------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                   |
+===========+==============+===========+============================+
| integer   | canceled     | O         | キャンセルされていたら 1   |
+-----------+--------------+-----------+----------------------------+

iric\_check\_lock\_f
~~~~~~~~~~~~~~~~~~~~

CGNSファイルがGUIによってロックされているか確認する。

【形式】

    call **iric\_check\_lock\_f** (filename, locked)

【引数】

+-----------------+--------------+-----------+------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**               |
+=================+==============+===========+========================+
| character(\*)   | filename     | I         | ファイル名             |
+-----------------+--------------+-----------+------------------------+
| integer         | locked       | O         | ロックされていたら 1   |
+-----------------+--------------+-----------+------------------------+

iric\_write\_sol\_start\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~

計算結果の出力開始をGUIに通知する。

【形式】

    call **iric\_write\_sol\_start\_f** (filename, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | filename     | I         | ファイル名                |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

iric\_write\_sol\_end\_f
~~~~~~~~~~~~~~~~~~~~~~~~

計算結果の出力終了をGUIに通知する。

【形式】

    call **iric\_write\_sol\_end\_f** (filename, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | filename     | I         | ファイル名                |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_flush\_f
~~~~~~~~~~~~~~~~~~

計算結果の出力をファイルに書き込む。

【形式】

    call **cg\_iric\_flush\_f** (filename, fin, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| character(\*)   | filename     | I         | ファイル名                |
+-----------------+--------------+-----------+---------------------------+
| integer         | fid          | I/O       | ファイルID                |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

計算結果の数を取得する。

【形式】

    call **cg\_iric\_read\_sol\_count\_f** (count, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | count        | O         | 計算結果の数              |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_time\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

計算結果の時刻の値を取得する。

【形式】

    call **cg\_iric\_read\_sol\_time\_f** (step, time, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| integer            | step         | I         | ステップ数                |
+--------------------+--------------+-----------+---------------------------+
| double precision   | time         | O         | 時刻                      |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_iteration\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

計算結果のループ回数の値を取得する。

【形式】

    call **cg\_iric\_read\_sol\_iteration\_f** (step, iteration, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | step         | I         | ステップ数                |
+-----------+--------------+-----------+---------------------------+
| integer   | iteration    | O         | ループ回数                |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_baseiterative\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

整数の計算結果の値を取得する。

【形式】

    call **cg\_iric\_read\_sol\_baseiterative\_integer\_f** (step,
    label, val, ier)

【引数】

+-----------------+--------------+-----------+---------------------------+
| **型**          | **変数名**   | **I/O**   | **内容**                  |
+=================+==============+===========+===========================+
| integer         | step         | I         | ステップ数                |
+-----------------+--------------+-----------+---------------------------+
| character(\*)   | label        | I         | 名前                      |
+-----------------+--------------+-----------+---------------------------+
| integer         | val          | O         | 値                        |
+-----------------+--------------+-----------+---------------------------+
| integer         | ier          | O         | エラーコード。0なら成功   |
+-----------------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_baseiterative\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

倍精度実数の計算結果の値を取得する。

【形式】

    call **cg\_iric\_read\_sol\_baseiterative\_real\_f** (step, label,
    val, ier)

【引数】

+--------------------+--------------+-----------+---------------------------+
| **型**             | **変数名**   | **I/O**   | **内容**                  |
+====================+==============+===========+===========================+
| integer            | step         | I         | ステップ数                |
+--------------------+--------------+-----------+---------------------------+
| character(\*)      | label        | I         | 名前                      |
+--------------------+--------------+-----------+---------------------------+
| double precision   | val          | O         | 値                        |
+--------------------+--------------+-----------+---------------------------+
| integer            | ier          | O         | エラーコード。0なら成功   |
+--------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_gridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

計算結果の2次元構造格子を取得する。

【形式】

    call **cg\_iric\_read\_sol\_gridcoord2d\_f** (step, x, y, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| integer                                       | step         | I         | ステップ数                |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | O         | X座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | O         | Y座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_gridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

計算結果の3次元構造格子を取得する。

【形式】

    call **cg\_iric\_read\_sol\_gridcoord3d\_f** (step, x, y, z, ier)

【引数】

+-----------------------------------------------+--------------+-----------+---------------------------+
| **型**                                        | **変数名**   | **I/O**   | **内容**                  |
+===============================================+==============+===========+===========================+
| integer                                       | step         | I         | ステップ数                |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | x            | O         | X座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | y            | O         | Y座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| double precision, dimension(:), allocatable   | z            | O         | Z座標                     |
+-----------------------------------------------+--------------+-----------+---------------------------+
| integer                                       | ier          | O         | エラーコード。0なら成功   |
+-----------------------------------------------+--------------+-----------+---------------------------+

cg\_iric\_read\_sol\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

整数の格子点ごとに値を持つ計算結果の値を取得する。

【形式】

    call **cg\_iric\_read\_sol\_integer\_f** (step, label, val, ier)

【引数】

+--------------------------------------+--------------+-----------+--------------------------------------------+
| **型**                               | **変数名**   | **I/O**   | **内容**                                   |
+======================================+==============+===========+============================================+
| integer                              | step         | I         | ステップ数                                 |
+--------------------------------------+--------------+-----------+--------------------------------------------+
| character(\*)                        | label        | I         | 名前                                       |
+--------------------------------------+--------------+-----------+--------------------------------------------+
| integer, imension(:,:),allocatable   | val          | O         | 値（3次元格子の場合、型は                  |
|                                      |              |           |                                            |
|                                      |              |           | integer, dimension(:,:,:), allocatable）   |
+--------------------------------------+--------------+-----------+--------------------------------------------+
| integer                              | ier          | O         | エラーコード。0なら成功                    |
+--------------------------------------+--------------+-----------+--------------------------------------------+

cg\_iric\_read\_sol\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

倍精度実数の格子点ごとに値を持つ計算結果の値を取得する。

【形式】

    call **cg\_iric\_read\_sol\_real\_f** (step, label, val, ier)

【引数】

+-------------------------------------------------+--------------+-----------+-----------------------------------------------------+
| **型**                                          | **変数名**   | **I/O**   | **内容**                                            |
+=================================================+==============+===========+=====================================================+
| integer                                         | step         | I         | ステップ数                                          |
+-------------------------------------------------+--------------+-----------+-----------------------------------------------------+
| character(\*)                                   | label        | I         | 名前                                                |
+-------------------------------------------------+--------------+-----------+-----------------------------------------------------+
| double precision, dimension(:,:), allocatable   | val          | O         | 値（3次元格子の場合、型は                           |
|                                                 |              |           |                                                     |
|                                                 |              |           | double precision, dimension(:,:,:), allocatable）   |
+-------------------------------------------------+--------------+-----------+-----------------------------------------------------+
| integer                                         | ier          | O         | エラーコード。0なら成功                             |
+-------------------------------------------------+--------------+-----------+-----------------------------------------------------+

cg\_iric\_write\_errorcode\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

エラーコードを出力する。

【形式】

    call **cg\_iric\_write\_errorcode\_f** (code, ier)

【引数】

+-----------+--------------+-----------+----------------------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                               |
+===========+==============+===========+========================================+
| integer   | code         | I         | 格子生成プログラムが返すエラーコード   |
+-----------+--------------+-----------+----------------------------------------+
| integer   | ier          | O         | エラーコード。0なら成功                |
+-----------+--------------+-----------+----------------------------------------+

cg\_close\_f
~~~~~~~~~~~~

CGNS ファイルを閉じる。

【形式】

    call **cg\_close\_f**\ (fid, ier)

【引数】

+-----------+--------------+-----------+---------------------------+
| **型**    | **変数名**   | **I/O**   | **内容**                  |
+===========+==============+===========+===========================+
| integer   | fid          | I         | ファイルID                |
+-----------+--------------+-----------+---------------------------+
| integer   | ier          | O         | エラーコード。0なら成功   |
+-----------+--------------+-----------+---------------------------+
